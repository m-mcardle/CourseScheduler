# You can override the included template(s) by including variable overrides
# SAST customization: https://docs.gitlab.com/ee/user/application_security/sast/#customizing-the-sast-settings
# Secret Detection customization: https://docs.gitlab.com/ee/user/application_security/secret_detection/#customizing-settings
# Dependency Scanning customization: https://docs.gitlab.com/ee/user/application_security/dependency_scanning/#customizing-the-dependency-scanning-settings
# Container Scanning customization: https://docs.gitlab.com/ee/user/application_security/container_scanning/#customizing-the-container-scanning-settings
# Note that environment variables can be set in several places
# See https://docs.gitlab.com/ee/ci/variables/#cicd-variable-precedence
stages:
- test
- build
- deploy
- e2e
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
test-api:
  image: python:latest
  stage: test
  script:
  - cd api
  - pip install pylint
  - pylint app.py
  rules:
  - changes:
    - api/**/*
test-cli:
  image: python:latest
  stage: test
  script:
  - cd cli
  - python -m unittest -b tests/*.py
  rules:
  - changes:
    - cli/**/*
test-client:
  image: node:latest
  stage: test
  script:
  - cd client
  - npm ci
  - npm run lint
  - npm test
  rules:
  - changes:
    - client/**/*
build:
  image: node:latest
  stage: build
  needs:
  - test-client
  script:
  - cd client
  - npm ci
  - npm run build
  artifacts:
    paths:
    - client/build/
  rules:
  - if: $CI_COMMIT_BRANCH == "main"
    changes:
    - client/**/*
deploy:
  image: node:latest
  stage: deploy
  needs:
  - build
  environment:
    name: production
    url: https://20.168.192.248/
  script:
  - chmod 400 $SSH_KEY
  - scp -i $SSH_KEY -o StrictHostKeyChecking=no -r ./client/build Team-205@20.168.192.248:~/
  - ssh -i $SSH_KEY -o StrictHostKeyChecking=no Team-205@20.168.192.248 "sudo cp -r
    ./build /www;"
  dependencies:
  - build
  rules:
  - if: $CI_COMMIT_BRANCH == "main"
    changes:
    - client/**/*
deploy-api:
  image: node:latest
  stage: deploy
  needs:
  - test-api
  environment:
    name: production-api
    url: https://20.168.192.248/api
  script:
  - chmod 400 $SSH_KEY
  - scp -i $SSH_KEY -o StrictHostKeyChecking=no -r ./api Team-205@20.168.192.248:~/
  - ssh -i $SSH_KEY -o StrictHostKeyChecking=no Team-205@20.168.192.248 "cd ~/api;
    python3 -m venv venv; . venv/bin/activate; pip install flask; pip install requests;
    pip install pylint; pip install gunicorn; pm2 reload 0;"
  rules:
  - if: $CI_COMMIT_BRANCH == "main"
    changes:
    - api/**/*
e2e:
  image: cypress/browsers:node16.14.0-chrome99-ff97
  stage: e2e
  needs:
  - deploy
  script:
  - cd client
  - npm ci
  - npm run e2e:prod
  rules:
  - if: $CI_COMMIT_BRANCH == "main"
    changes:
    - client/**/*
  artifacts:
    when: always
    paths:
    - client/cypress/videos/**/*.mp4
    - client/cypress/screenshots/**/*.png
    expire_in: 1 day
sast:
  stage: test
include:
- template: Security/SAST.gitlab-ci.yml
